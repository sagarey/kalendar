name: Android APK Build & Test

on:
  workflow_dispatch:

env:
  API_LEVEL: 34
  # 高性能 Gradle 配置
  GRADLE_OPTS: >-
    -Dorg.gradle.jvmargs="-Xmx6g -XX:+UseG1GC -XX:+UseStringDeduplication -XX:MaxGCPauseMillis=100"
    -Dorg.gradle.daemon=true 
    -Dorg.gradle.parallel=true 
    -Dorg.gradle.configureondemand=true
    -Dorg.gradle.caching=true
    -Dorg.gradle.workers.max=4
    -Dkotlin.incremental=true
    -Dkotlin.incremental.android=true
    -Dkotlin.compiler.execution.strategy=in-process

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    timeout-minutes: 15  # 优化后应该更快
    
    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: '17'

      - name: Setup Android SDK
        uses: android-actions/setup-android@v3

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4

      - name: Build APK with Optimizations
        run: |
          # KVM 一步到位配置
          echo 'KERNEL=="kvm", GROUP="kvm", MODE="0666", OPTIONS+="static_node=kvm"' | sudo tee /etc/udev/rules.d/99-kvm4all.rules
          sudo udevadm control --reload-rules && sudo udevadm trigger --name-match=kvm
          
          # 设置环境变量
          export ANDROID_EMULATOR_USE_SYSTEM_LIBS=1
          export QT_QPA_PLATFORM=offscreen
          export QEMU_AUDIO_DRV=none
          
          # 高性能构建
          chmod +x gradlew
          ./gradlew assembleFossDebug --build-cache --parallel --no-daemon
          
      - name: High-Performance Emulator Test
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: ${{ env.API_LEVEL }}
          target: default
          arch: x86_64
          profile: pixel_6
          # 极致性能配置 - 8GB内存 + 优化启动参数
          emulator-options: >-
            -no-window -no-snapshot -no-audio -no-boot-anim 
            -gpu host -accel auto -netdelay none -netspeed full 
            -cores 4 -memory 8192 -cache-size 1024 
            -camera-back none -camera-front none 
            -skin 1080x2340
          disable-animations: true
          disable-spellchecker: true
          disable-linux-hw-accel: false
          working-directory: ./
          script: |
            # 快速等待和安装流程
            adb wait-for-device shell 'while [[ -z $(getprop sys.boot_completed) ]]; do sleep 1; done'
            adb install -r -t app/build/outputs/apk/foss/debug/kalendar-app-foss-debug.apk
            adb shell am start -W -n org.fossify.calendar.debug/.activities.SplashActivity
            sleep 5
            adb shell screencap -p /sdcard/screenshot.png
            adb pull /sdcard/screenshot.png calendar_screenshot.png

      - name: Upload Results
        uses: actions/upload-artifact@v4
        with:
          name: test-results-${{ github.run_number }}
          path: |
            app/build/outputs/apk/foss/debug/kalendar-app-foss-debug.apk
            calendar_screenshot.png