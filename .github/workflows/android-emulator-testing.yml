name: Android Emulator Testing

on:
  workflow_dispatch:
    inputs:
      branch:
        description: 'Target branch to test'
        required: false
        default: 'main'

env:
  API_LEVEL: 34
  TARGET: default
  ARCH: x86_64
  PROFILE: Nexus 6

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  emulator-test:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    env:
      # 优化 Gradle 性能 - ubuntu-latest 4核心配置
      GRADLE_OPTS: -Dorg.gradle.daemon=true -Dorg.gradle.parallel=true -Dorg.gradle.workers.max=4 -Dorg.gradle.configureondemand=true -Dorg.gradle.caching=true -Dkotlin.incremental=true -Dkotlin.incremental.android=true -Dkotlin.compiler.execution.strategy=in-process -Dorg.gradle.jvmargs="-Xmx4g -XX:+UseG1GC -XX:MaxGCPauseMillis=100"
      # Android 相关环境变量
      ANDROID_BUILD_TOOLS: 34.0.0
      ANDROID_HOME: /usr/local/lib/android/sdk
      ANDROID_AVD_HOME: /home/runner/.android/avd

    steps:
      # ============================================
      # 阶段1: 代码获取
      # ============================================
      
      - name: Checkout
        uses: actions/checkout@v5
        with:
          ref: ${{ github.event.inputs.branch || github.ref }}
          fetch-depth: 1

      # ============================================
      # 阶段2: 基础环境设置
      # ============================================

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: '17'
        
      - name: Setup Gradle Permissions
        run: |
          chmod +x gradlew
        
      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4
        with:
          cache-read-only: false

      # ============================================
      # 阶段3: Android SDK 设置
      # ============================================

      - name: Setup Android Environment
        run: |
          echo "QT_QPA_PLATFORM=offscreen" >> $GITHUB_ENV
          echo "DISPLAY=:99" >> $GITHUB_ENV

      - name: Setup Android SDK
        uses: android-actions/setup-android@v3
        with:
          packages: tools platform-tools platforms;android-${{ env.API_LEVEL }} build-tools;${{ env.ANDROID_BUILD_TOOLS }} system-images;android-${{ env.API_LEVEL }};${{ env.TARGET }};${{ env.ARCH }} emulator

      - name: Create AVD
        run: |
          SYSTEM_IMAGE="system-images;android-${{ env.API_LEVEL }};${{ env.TARGET }};${{ env.ARCH }}"
          AVD_NAME="test-api${{ env.API_LEVEL }}"
          echo "no" | avdmanager create avd --force --name "$AVD_NAME" --abi "${{ env.TARGET }}/${{ env.ARCH }}" --package "$SYSTEM_IMAGE" --device "${{ env.PROFILE }}"

      # ============================================
      # 阶段4: APK 构建
      # ============================================

      - name: Build APK
        timeout-minutes: 10
        run: ./gradlew clean assembleFossDebug --stacktrace --no-daemon

      # ============================================
      # 阶段5: 模拟器测试 + 截图
      # ============================================

      - name: Android Emulator Testing with Screenshots
        timeout-minutes: 15
        continue-on-error: false  # 主测试步骤必须成功
        uses: reactivecircus/android-emulator-runner@v2
        env:
          ANDROID_AVD_HOME: ${{ env.ANDROID_AVD_HOME }}
        with:
          api-level: ${{ env.API_LEVEL }}
          target: ${{ env.TARGET }}
          arch: ${{ env.ARCH }}
          profile: ${{ env.PROFILE }}
          avd-name: test-api${{ env.API_LEVEL }}
          force-avd-creation: false
          emulator-options: -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back none -camera-front none
          disable-animations: true
          disable-spellchecker: true
          disable-linux-hw-accel: false
          script: adb uninstall org.fossify.calendar.debug || true && adb install -r app/build/outputs/apk/foss/debug/kalendar-app-foss-debug.apk && adb shell pm list packages | grep org.fossify.calendar.debug && sleep 5 && adb shell screencap -p /sdcard/screenshot.png && adb pull /sdcard/screenshot.png calendar_running_screenshot.png

      - name: Upload APK and Screenshot
        uses: actions/upload-artifact@v4
        with:
          name: android-test-results-${{ github.run_number }}
          path: |
            app/build/outputs/apk/foss/debug/kalendar-app-foss-debug.apk
            calendar_running_screenshot.png
          retention-days: 3
